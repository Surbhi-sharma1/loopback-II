{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { catchError } from \"rxjs/operators\";\nimport { map, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let HTTPServiceRequest = /*#__PURE__*/(() => {\n  class HTTPServiceRequest {\n    constructor(http) {\n      this.http = http;\n      this.data = [];\n      this.user = [];\n      this.data1 = [];\n      this.url = 'http://localhost:3000/';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    getRoleList() {\n      return this.http.get(this.url + 'roles').pipe(map(res => {\n        const roleslist = [];\n        res.forEach(response => {\n          roleslist.push(response);\n        });\n        return roleslist;\n      }), catchError(this.errorHandler));\n    }\n\n    getCustomerList() {\n      return this.http.get(this.url + 'customers').pipe(map(res => {\n        const list = [];\n        res.forEach(res => {\n          list.push(res);\n        });\n        return list;\n      }), catchError(this.errorHandler));\n    }\n\n    getCustomer() {\n      return this.http.get(this.url + 'customers').pipe(map(res => {\n        const list = [];\n        res.forEach(res => {\n          list.push(res);\n        });\n        return list;\n      }), catchError(this.errorHandler));\n    }\n\n    createCustomer(data) {\n      const url = 'http://localhost:3000/customers';\n      const myData = {\n        customerid: Number(data.customerid),\n        name: data.name,\n        website: data.website,\n        address: data.address\n      };\n      return this.http.post(url, myData, this.httpOptions);\n    }\n\n    getUsers() {\n      return this.http.get('http://localhost:3000/users');\n    }\n\n    onDelete(id) {\n      return this.http.delete('http://localhost:3000/users/' + `${id}`);\n    }\n\n    updateUser(user) {\n      const url = 'http://localhost:3000/users/';\n      return this.http.put(url + user.id, user, this.httpOptions);\n    }\n\n    createUser(data) {\n      const myBody = {\n        id: Number(data.id),\n        firstname: data.firstname,\n        middlename: data.middlename,\n        lastname: data.lastname,\n        email: data.email,\n        phone: data.phone,\n        roleName: data.roleName,\n        customerName: data.customerName,\n        address: data.address\n      };\n      const url = 'http://localhost:3000/users';\n      return this.http.post(url, myBody, this.httpOptions).pipe(catchError(this.errorHandler));\n    }\n\n    getUserById(id) {\n      const url = 'http://localhost:3000/users';\n      return this.http.get(`${url}/${id}`, this.httpOptions).pipe(map(res => {\n        return res || {};\n      }), catchError(this.errorHandler));\n    }\n\n    errorHandler(error) {\n      let errorMessage = 'generic error';\n\n      if (error.error instanceof ErrorEvent) {\n        // Get client-side error\n        errorMessage = error.error.message;\n      } else {\n        // Get server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  HTTPServiceRequest.ɵfac = function HTTPServiceRequest_Factory(t) {\n    return new (t || HTTPServiceRequest)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  HTTPServiceRequest.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HTTPServiceRequest,\n    factory: HTTPServiceRequest.ɵfac,\n    providedIn: 'root'\n  });\n  return HTTPServiceRequest;\n})();","map":null,"metadata":{},"sourceType":"module"}